#!/bin/bash

# Probandole
#
# /etc/profile (Para todos los usuarios)
# ~/.bash_profile (Para un usuario concreto)
# ~/.bash_login (Para un usuario concreto)
# ~/.profile (Para un usuario concreto)
#
# Visto en: http://www.sysadmit.com/2016/06/linux-anadir-ruta-al-path.html
#
#############################################################################

export BROWSER="x-www-browser"

# TEST
echo -e "Ejecutando .bashrc.local"

# Personal bin directory
# ~~~~~~~~~~~~~~~~~~~~~~
if [ -d "${HOME}/bin" ]; then
    export PATH="${PATH}:/home/${HOME}/bin/"
fi

# set PATH so it includes user's private pip install if it exists
if [ -d "${HOME}/.local-x64/bin" ] ; then
    export PATH="${HOME}/.local-x64/bin:${PATH}"
fi

# set PATH so it includes user's private pip install if it exists
if [ -d "${HOME}/.local/bin" ] ; then
    export PATH="${HOME}/.local/bin:${PATH}"
fi

# SSH
# ~~~
if [ -z "$SSH_AUTH_SOCK" ]
then
    eval "$(ssh-agent -s)"
    ssh-add -l -E md5
else
    command -v ssh >/dev/null 2>&1 || { echo -e "apt install task-ssh-server ssh ssh-askpass sshpass\n\nSaliendo.\n" >&2; }
fi

# GnuPG (TODO: Verificar que existe gnupg)
# ~~~~~
if [ -f "/usr/bin/gpgconf" ]; then
    eval "$(/usr/bin/gpgconf --kill gpg-agent);"
    export GPG_TTY
    GPG_TTY="$(tty)"
    /usr/bin/gpg-agent --daemon --enable-ssh-support --pinentry-program /usr/bin/pinentry-gnome3 --scdaemon-program /usr/lib/gnupg/scdaemon
else
    command -v gnupg >/dev/null 2>&1 || { echo -e "apt install gnupg gnupg-agent gnupg-l10n gnupg2 .\n\nSaliendo.\n" >&2; exit 1;}
fi

# VirtualEnvWrapper
# ~~~~~~~~~~~~~~~~~
if [ -f "/usr/share/virtualenvwrapper/virtualenvwrapper.sh" ]; then
    # shellcheck disable=SC1091
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
    export VIRTUALENV_PYTHON=/usr/bin/python3
else
    command -v virtualenvwrapper >/dev/null 2>&1 || { echo -e "apt install virtualenv python-virtualenv python3-virtualenv virtualenvwrapper .\n\nSaliendo.\n" >&2; exit 1;}
fi

# Pandoc
# ~~~~~~
if [ -f /usr/bin/pandoc ]; then
    eval "$(/usr/bin/pandoc --bash-completion)"
fi

# Ruby Manager (TODO: Verificar que existe rvm)
# ~~~~~~~~~~~~
export PATH="${HOME}/.rvm/bin:${PATH}"
# shellcheck source=${HOME}/.rvm/scripts/rvm
# shellcheck disable=SC1091
[[ -s "${HOME}/.rvm/scripts/rvm" ]] && source "${HOME}/.rvm/scripts/rvm"

# END
